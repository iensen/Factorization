package com.example.multithread;

import java.math.BigInteger;
import java.util.ArrayList;

import android.os.AsyncTask;

private class FactorizationTask extends AsyncTask<Pair<BigInteger,FactorizationAlgo> Void, ArrayList<BigInteger> > {
    protected Long doInBackground(URL... urls) {
        int count = urls.length;
        long totalSize = 0;
        for (int i = 0; i < count; i++) {
            totalSize += Downloader.downloadFile(urls[i]);
            publishProgress((int) ((i / (float) count) * 100));
            // Escape early if cancel() is called
            if (isCancelled()) break;
        }
        return totalSize;
    }


    protected void onPostExecute(Long result) {
        showDialog("Downloaded " + result + " bytes");
    }

	@Override
	protected ArrayList<BigInteger> doInBackground(BigInteger... arg0) {
		// TODO Auto-generated method stub
		return null;
	}
}
